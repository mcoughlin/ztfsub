
import os, sys, optparse, glob
import time
import numpy as np

def parse_commandline():
    """
    Parse the options given on the command-line.
    """
    parser = optparse.OptionParser()

    parser.add_option("-o","--outputDir",default="../output")
    parser.add_option("-c","--combinedDir",default="../combined")
    parser.add_option("--doCopy",  action="store_true", default=False)
    parser.add_option("--doCombine",  action="store_true", default=False)

    opts, args = parser.parse_args()

    return opts

# Parse command line
opts = parse_commandline()
outputDir = opts.outputDir
combinedDir = opts.combinedDir

linksFile = '%s/links.txt'%outputDir
links = [line.rstrip('\n') for line in open(linksFile)]

images = []

for link in links:
    imagefile = link.split("/")[-1]
    linkSplit = link.split("/")
    imagenum = int(linkSplit[-2])
    imageSplit = imagefile.replace(".fits","").split("_")
    fieldID = int(imageSplit[-6])
    monthday = int(linkSplit[-3])

    if monthday < 1100: continue
    if fieldID > 10000: continue

    baselink = "/".join(link.split("/")[:-1]) + "/"
    images.append([imagenum,fieldID,monthday])
images = np.array(images)

eventDirs = glob.glob("%s/*"%outputDir)

websiteDir = "%s/website"%outputDir
if not os.path.isdir(websiteDir):
    os.makedirs(websiteDir)

if not os.path.isdir(combinedDir):
    os.makedirs(combinedDir)

eventDirTransients = []
for eventDir in eventDirs:

    if "links" in eventDir: continue
    if "website" in eventDir: continue
    if "ZTF" in eventDir: continue

    eventDirSplit = eventDir.split("/")
    eventSplit = eventDirSplit[-1].split("_") 
    image = eventSplit[0]

    if len(eventSplit) == 1:
        ref = "SDSS"
    else:
        ref = eventSplit[1]

    ############################## header ######################################
    title = "%s: Reference %s"%(image,ref)

    contents=["""
    <html>
    <head>
    <meta content="text/html; charset=ISO-8859-1"
    http-equiv="content-type">
    <title>%s</title>
    </head>
    <body>
    <table style="text-align: left; width: 1260px; height: 67px; margin-left:auto; margin-right: auto;" border="1" cellpadding="1" cellspacing="1">
    <tbody>
    <tr>
    <td style="text-align: center; vertical-align: top; background-color:SpringGreen;"><big><big><big><big><span style="font-weight: bold;">%s</span></big></big></big></big>
    </td>
    </tr>
    </tbody>
    </table>
    <br>
    <br>

    """%(title,title)]

    table = ["""
    <table style="text-align: center; width: 1260px; height: 67px; margin-left:auto; margin-right: auto;" border="1" cellpadding="1" cellspacing="1">
    <tbody>
    """]

    table.append("""<tr><td>RA</td><td>Declination</td><td>Cutouts</td><td>Images</td></tr>""")
    transientDirs = glob.glob("%s/*"%eventDir)
    numtransients = 0
    for transientDir in transientDirs:
        pngfile = "%s/panels.png"%transientDir
        if not os.path.isfile(pngfile): continue
        transientDirSplit = transientDir.split("/")

        if opts.doCombine:
            transientfile = "%s/%s_%s.png"%(combinedDir,transientDirSplit[-2],transientDirSplit[-1])
            if not os.path.isfile(transientfile):
                cp_command = "cp %s %s"%(pngfile,transientfile)
                os.system(cp_command)

        radec = transientDirSplit[-1].split("_")
        ragalaxy, decgalaxy = float(radec[0]), float(radec[1])

        table.append("""
            <tr>
            <td style="vertical-align: top;">%.5f</td>
            <td style="vertical-align: top;">%.5f</td>
            <td style="vertical-align: top;">
            <a href="./%s/sci.fits">Science<br>
            <a href="./%s/ref.fits">Reference<br>
            <a href="./%s/sci.sub.fits">Subtracted<br>
            </td>
            <td style="vertical-align: top;"><a href="./%s/panels.png"><img alt="" src="./%s/panels.png" style="border: 0px solid ; width: 900px; height: 300px;"></a><br></td>
            </tr>
            """%(ragalaxy, decgalaxy,transientDirSplit[-1],transientDirSplit[-1],transientDirSplit[-1],transientDirSplit[-1],transientDirSplit[-1]))
        numtransients = numtransients + 1

    if numtransients > 0:
        eventDirTransients.append(eventDir)

    table.append("</tbody></table><br><br>")
    # add tables and list
    contents.append("".join(table))

    ################################# closing ##################################
    user=os.environ['USER']
    curTime=time.strftime('%m-%d-%Y %H:%M:%S',time.localtime())
    contents.append("""
    <small>
    This page was created by user %s on %s
    </small>
    </body>
    </html>
    """%(user,curTime))

    page = ''.join(contents)

    f = open(os.path.join(eventDir,"summary.html"),"w")
    f.write(page)
    f.close()

############################## header ######################################
title = "ZTF subtraction summary"
   
contents=["""
<html>
<head>
<meta content="text/html; charset=ISO-8859-1"
http-equiv="content-type">
<title>%s</title>
</head>
<body>
<table style="text-align: left; width: 1260px; height: 67px; margin-left:auto; margin-right: auto;" border="1" cellpadding="1" cellspacing="1">
<tbody>
<tr>
<td style="text-align: center; vertical-align: top; background-color:SpringGreen;"><big><big><big><big><span style="font-weight: bold;">%s</span></big></big></big></big>
</td>
</tr>
</tbody>
</table>
<br>
<br>

"""%(title,title)]

table = ["""
    <table style="text-align: center; width: 1260px; height: 67px; margin-left:auto; margin-right: auto;" border="1" cellpadding="1" cellspacing="1">
    <tbody>
"""]

table.append("""<tr><td>Field ID</td><td>Observation Date</td><td>Observation Image</td><td>Reference Date</td><td>Reference Image</td><td>Link</td></tr>""")
for eventDir in eventDirTransients:

    if "links" in eventDir: continue
    if "website" in eventDir: continue

    eventDirSplit = eventDir.split("/")
    eventSplit = eventDirSplit[-1].split("_")
    monthday = int(eventSplit[0])
    imagenum = int(eventSplit[1])
   
    idx = np.where((images[:,0] == imagenum) & (images[:,2] == monthday))[0]
    fieldID = int(np.array(images)[idx,1][0])

    if len(eventSplit) == 2:
        refmonthday = "-"
        refimagenum = "-"
    else:
        refmonthday = eventSplit[2]
        refimagenum = eventSplit[3]

    table.append("""
            <tr>
            <td style="vertical-align: top;">%d</td>
            <td style="vertical-align: top;">%d</td>
            <td style="vertical-align: top;">%d</td>
            <td style="vertical-align: top;">%s</td>
            <td style="vertical-align: top;">%s</td>
            <td style="vertical-align: top;">
            <a href="../%s/summary.html">Summary Page<br>
            </td>
            </tr>
            """%(fieldID,monthday,imagenum,refmonthday,refimagenum,eventDirSplit[-1]))
table.append("</tbody></table><br><br>")
# add tables and list
contents.append("".join(table))

################################# closing ##################################
user=os.environ['USER']
curTime=time.strftime('%m-%d-%Y %H:%M:%S',time.localtime())
contents.append("""
<small>
This page was created by user %s on %s
</small>
</body>
</html>
"""%(user,curTime))

page = ''.join(contents)

f = open(os.path.join(websiteDir,"summary.html"),"w")
f.write(page)
f.close()

if opts.doCopy:
    rsync_command = 'export RSYNC_RSH="gsissh"; rsync -arv %s atlas5.atlas.aei.uni-hannover.de:/home/mcoughlin/WWW/ZTF/'%(opts.outputDir)
    os.system(rsync_command) 

if opts.doCombine:
    print opts.combinedDir
    print opts.combinedDir.split("/")[-1]
    tar_command = "cd %s; tar -cvzf %s.tar.gz %s"%("/".join(opts.combinedDir.split("/")[:-1]),opts.combinedDir.split("/")[-1],opts.combinedDir.split("/")[-1])
    print tar_command 
    os.system(tar_command)

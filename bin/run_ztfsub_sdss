
import os, sys

import numpy as np

import astropy.units as u
import astropy.coordinates as coord

from astroquery.vizier import Vizier

from astropy.io import fits

inputDir = "../input"
tilesFile = '%s/ZTF_Fields.txt'%inputDir
tiles = np.loadtxt(tilesFile,comments='%')

outputDir = "../output"
linksFile = '%s/links.txt'%outputDir
links = [line.rstrip('\n') for line in open(linksFile)]

images = []

for link in links:
    imagefile = link.split("/")[-1]
    linkSplit = link.split("/")
    imagenum = int(linkSplit[-2])

    imageSplit = imagefile.replace(".fits","").split("_")

    fieldID = int(imageSplit[-6])

    if fieldID > 90000: continue

    images.append([imagenum,fieldID])

images = np.vstack({tuple(row) for row in images})

for image in images:
    imagenum,fieldID = image
    print imagenum,fieldID
    #if not fieldID == 608: continue

    idx = np.where(fieldID == tiles[:,0])[0]
    tile = tiles[idx][0]
    fieldID, ra, dec = tile[0], tile[1], tile[2]
    #ra = ra + 4.0
    #dec = dec + 4.0

    result = Vizier.query_region(coord.SkyCoord(ra=ra, dec=dec,
                                     unit=(u.deg, u.deg),
                                     frame='icrs'),
                                     width=[0.1*u.deg,0.1*u.deg],
                                     catalog=['VII/275'])
    for table_name in result.keys():
        table = result[table_name]
        appM = table["Bmag"] - (5*np.log10(table["Dist"]*1e6) - 5)
        idx = np.nanargmin(appM)

        ragalaxy, decgalaxy = table["RAJ2000"][idx], table["DEJ2000"][idx]

        system_command = "python ztfsub_sdss --doPlots --image %s"%imagefile
        #system_command = "python ztfsub_sdss --doAstrometryNet --doPlots --image %s"%imagefile
        #system_command = "python ztfsub_sdss --doPlots --imagenum %d --ra %.5f --declination %.5f "%(imagenum,ragalaxy,decgalaxy)
        os.system(system_command)

        #print "python ztfsub_sdss --doPlots --imagenum %d --ra %.5f --declination %.5f "%(imagenum,ragalaxy,decgalaxy)
        #print "python ztfsub_sdss --doPlots --image %s"%imagefile  
